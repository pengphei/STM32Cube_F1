# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import os
Import('genv')

gcc_arm_cm3_inc = "Source/portable/GCC/ARM_CM3"
gcc_arm_cm3_src = "Source/portable/GCC/ARM_CM3/port.c"
src_portable_memmang = "Source/portable/MemMang/heap_4.c"

inc = [
    'Source/include',
    'Source/CMSIS_RTOS',
    'Inc/Legacy',
    genv["PROJECT_ROOT"]+"/Inc",
    genv["STM32_DRIVERS_PATH"] + "/CMSIS/Device/ST/STM32F1xx/Include",
    genv["STM32_DRIVERS_PATH"] + "/CMSIS/Include",
]

env = Environment()

env["CC"] = genv["CC"]
env["CXX"] = genv["CXX"]
env["AS"] = genv["AS"]
env["AR"] = genv["AR"]
env["LINK"] = genv["LINK"]
env["OBJCOPY"] = genv["OBJCOPY"]
env["NM"] = genv["NM"]
env["ENV"] = genv["ENV"]

env["LINKFLAGS"] = genv["LINKFLAGS"]
env["CFLAGS"] = genv["CFLAGS"]
env["ASFLAGS"] = genv["ASFLAGS"]

dst = "STM32F1xx_FREE_RTOS"

src = [
    "Source/croutine.c",
    "Source/event_groups.c",
    "Source/list.c",
    "Source/queue.c",
    "Source/tasks.c",
    "Source/timers.c",
    "Source/CMSIS_RTOS/cmsis_os.c",
]

inc += [
    gcc_arm_cm3_inc,
]

src += [
    gcc_arm_cm3_src,
    src_portable_memmang,
]

lib = []

stm32_free_rtos = env.StaticLibrary(target=dst, source=src, LIBS=lib, CPPPATH=inc)
Return("stm32_free_rtos")
